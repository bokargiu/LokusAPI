// <auto-generated />
using System;
using LokusAPI.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LokusAPI.Migrations
{
    [DbContext(typeof(AppDb))]
    [Migration("20250906214020_UpdateGuidId")]
    partial class UpdateGuidId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CompanySubscription", b =>
                {
                    b.Property<Guid>("CompaniesId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("HistoryId")
                        .HasColumnType("char(36)");

                    b.HasKey("CompaniesId", "HistoryId");

                    b.HasIndex("HistoryId");

                    b.ToTable("CompanySubscription");
                });

            modelBuilder.Entity("CustomerSubscription", b =>
                {
                    b.Property<Guid>("CustomersId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("HistoryId")
                        .HasColumnType("char(36)");

                    b.HasKey("CustomersId", "HistoryId");

                    b.HasIndex("HistoryId");

                    b.ToTable("CustomerSubscription");
                });

            modelBuilder.Entity("LokusAPI.Models.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Complement")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("CostumerId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Road")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CostumerId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("LokusAPI.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("StablishmentId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("StablishmentId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("LokusAPI.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactOther")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameCompany")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Companys");
                });

            modelBuilder.Entity("LokusAPI.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateOnly>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("LokusAPI.Models.Feedback", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("char(36)");

                    b.Property<int>("OverallRating")
                        .HasColumnType("int");

                    b.Property<int>("ParkingRating")
                        .HasColumnType("int");

                    b.Property<int>("PlugRating")
                        .HasColumnType("int");

                    b.Property<int>("PriceRating")
                        .HasColumnType("int");

                    b.Property<Guid?>("StablishmentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<int>("WifiRating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("StablishmentId");

                    b.HasIndex("UserId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("LokusAPI.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("char(36)");

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("LokusAPI.Models.Schedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("DayOfWeek")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("SpaceId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("SpaceId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("LokusAPI.Models.Space", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("PricePerHour")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("Spaces");
                });

            modelBuilder.Entity("LokusAPI.Models.Stablishment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("VirtualName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Stablishment");
                });

            modelBuilder.Entity("LokusAPI.Models.StablishmentGallery", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("StablishmentId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("StablishmentId");

                    b.ToTable("StablishmentGalleries");
                });

            modelBuilder.Entity("LokusAPI.Models.Subscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("LokusAPI.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CompanySubscription", b =>
                {
                    b.HasOne("LokusAPI.Models.Company", null)
                        .WithMany()
                        .HasForeignKey("CompaniesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LokusAPI.Models.Subscription", null)
                        .WithMany()
                        .HasForeignKey("HistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CustomerSubscription", b =>
                {
                    b.HasOne("LokusAPI.Models.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LokusAPI.Models.Subscription", null)
                        .WithMany()
                        .HasForeignKey("HistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LokusAPI.Models.Address", b =>
                {
                    b.HasOne("LokusAPI.Models.Company", "Company")
                        .WithMany("Addresses")
                        .HasForeignKey("CompanyId");

                    b.HasOne("LokusAPI.Models.Customer", "Costumer")
                        .WithMany("Addresses")
                        .HasForeignKey("CostumerId");

                    b.Navigation("Company");

                    b.Navigation("Costumer");
                });

            modelBuilder.Entity("LokusAPI.Models.Category", b =>
                {
                    b.HasOne("LokusAPI.Models.Stablishment", "Stablishment")
                        .WithMany("Categories")
                        .HasForeignKey("StablishmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stablishment");
                });

            modelBuilder.Entity("LokusAPI.Models.Company", b =>
                {
                    b.HasOne("LokusAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LokusAPI.Models.Customer", b =>
                {
                    b.HasOne("LokusAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LokusAPI.Models.Feedback", b =>
                {
                    b.HasOne("LokusAPI.Models.Company", "Company")
                        .WithMany("Feedbacks")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LokusAPI.Models.Customer", null)
                        .WithMany("Feedbacks")
                        .HasForeignKey("CustomerId");

                    b.HasOne("LokusAPI.Models.Stablishment", null)
                        .WithMany("Feedbacks")
                        .HasForeignKey("StablishmentId");

                    b.HasOne("LokusAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LokusAPI.Models.Image", b =>
                {
                    b.HasOne("LokusAPI.Models.Customer", "Client")
                        .WithMany("Images")
                        .HasForeignKey("ClientId");

                    b.HasOne("LokusAPI.Models.Company", "Company")
                        .WithMany("Images")
                        .HasForeignKey("CompanyId");

                    b.Navigation("Client");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("LokusAPI.Models.Schedule", b =>
                {
                    b.HasOne("LokusAPI.Models.Space", "Space")
                        .WithMany("Schedules")
                        .HasForeignKey("SpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Space");
                });

            modelBuilder.Entity("LokusAPI.Models.Stablishment", b =>
                {
                    b.HasOne("LokusAPI.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LokusAPI.Models.Company", "Company")
                        .WithMany("Stablishments")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("LokusAPI.Models.StablishmentGallery", b =>
                {
                    b.HasOne("LokusAPI.Models.Stablishment", "Stablishment")
                        .WithMany("Galleries")
                        .HasForeignKey("StablishmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stablishment");
                });

            modelBuilder.Entity("LokusAPI.Models.Company", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Feedbacks");

                    b.Navigation("Images");

                    b.Navigation("Stablishments");
                });

            modelBuilder.Entity("LokusAPI.Models.Customer", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Feedbacks");

                    b.Navigation("Images");
                });

            modelBuilder.Entity("LokusAPI.Models.Space", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("LokusAPI.Models.Stablishment", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Feedbacks");

                    b.Navigation("Galleries");
                });
#pragma warning restore 612, 618
        }
    }
}
