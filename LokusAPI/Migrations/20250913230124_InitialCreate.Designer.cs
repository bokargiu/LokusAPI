// <auto-generated />
using System;
using LokusAPI.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LokusAPI.Migrations
{
    [DbContext(typeof(AppDb))]
    [Migration("20250913230124_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("LokusAPI.Models.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Complement")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Road")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("LokusAPI.Models.Availability", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("DiaSemana")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("HoraFim")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time(6)");

                    b.Property<Guid>("SpaceId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpaceId");

                    b.ToTable("Availabilities");
                });

            modelBuilder.Entity("LokusAPI.Models.Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<TimeSpan>("HoraFim")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time(6)");

                    b.Property<Guid?>("PagamentoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SpaceId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SpaceId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("LokusAPI.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("StablishmentId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("StablishmentId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("LokusAPI.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactOther")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("CurrentSubscriptionId")
                        .HasColumnType("char(36)");

                    b.Property<string>("NameCompany")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CurrentSubscriptionId");

                    b.HasIndex("UserId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("LokusAPI.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("CurrentSubscriptionId")
                        .HasColumnType("char(36)");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ProfileImageId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CurrentSubscriptionId");

                    b.HasIndex("ProfileImageId");

                    b.HasIndex("UserId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("LokusAPI.Models.Feedback", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("char(36)");

                    b.Property<int>("OverallRatings")
                        .HasColumnType("int");

                    b.Property<int>("ParkingRatings")
                        .HasColumnType("int");

                    b.Property<int>("PlugRatings")
                        .HasColumnType("int");

                    b.Property<int>("PriceRatings")
                        .HasColumnType("int");

                    b.Property<Guid>("StablishmentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<int>("WifiRatings")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("StablishmentId");

                    b.HasIndex("UserId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("LokusAPI.Models.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("char(36)");

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<Guid?>("StablishmentId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("StablishmentId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("LokusAPI.Models.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<Guid>("ReservaId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ReservaId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("LokusAPI.Models.Space", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("PriceEnum")
                        .HasColumnType("int");

                    b.Property<Guid>("StablishmentId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("StablishmentId");

                    b.ToTable("Spaces");
                });

            modelBuilder.Entity("LokusAPI.Models.Stablishment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ProfileImageId")
                        .HasColumnType("char(36)");

                    b.Property<string>("VirtualName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ProfileImageId");

                    b.ToTable("Stablishments");
                });

            modelBuilder.Entity("LokusAPI.Models.StablishmentGallery", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("StablishmentId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("StablishmentId");

                    b.ToTable("StablishmentGalleries");
                });

            modelBuilder.Entity("LokusAPI.Models.Subscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("LokusAPI.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LokusAPI.Models.Availability", b =>
                {
                    b.HasOne("LokusAPI.Models.Space", "Space")
                        .WithMany()
                        .HasForeignKey("SpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Space");
                });

            modelBuilder.Entity("LokusAPI.Models.Booking", b =>
                {
                    b.HasOne("LokusAPI.Models.Customer", "Customer")
                        .WithMany("Bookings")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LokusAPI.Models.Space", "Space")
                        .WithMany("Bookings")
                        .HasForeignKey("SpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Space");
                });

            modelBuilder.Entity("LokusAPI.Models.Category", b =>
                {
                    b.HasOne("LokusAPI.Models.Stablishment", "Stablishment")
                        .WithMany("Categories")
                        .HasForeignKey("StablishmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stablishment");
                });

            modelBuilder.Entity("LokusAPI.Models.Company", b =>
                {
                    b.HasOne("LokusAPI.Models.Subscription", "CurrentSubscription")
                        .WithMany("Companies")
                        .HasForeignKey("CurrentSubscriptionId");

                    b.HasOne("LokusAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentSubscription");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LokusAPI.Models.Customer", b =>
                {
                    b.HasOne("LokusAPI.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("LokusAPI.Models.Subscription", "CurrentSubscription")
                        .WithMany("Customers")
                        .HasForeignKey("CurrentSubscriptionId");

                    b.HasOne("LokusAPI.Models.Image", "ProfileImage")
                        .WithMany()
                        .HasForeignKey("ProfileImageId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("LokusAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("CurrentSubscription");

                    b.Navigation("ProfileImage");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LokusAPI.Models.Feedback", b =>
                {
                    b.HasOne("LokusAPI.Models.Customer", null)
                        .WithMany("Feedbacks")
                        .HasForeignKey("CustomerId");

                    b.HasOne("LokusAPI.Models.Stablishment", "Stablishment")
                        .WithMany("Feedbacks")
                        .HasForeignKey("StablishmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LokusAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stablishment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LokusAPI.Models.Image", b =>
                {
                    b.HasOne("LokusAPI.Models.Customer", "Customer")
                        .WithMany("Images")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LokusAPI.Models.Stablishment", "Stablishment")
                        .WithMany()
                        .HasForeignKey("StablishmentId");

                    b.Navigation("Customer");

                    b.Navigation("Stablishment");
                });

            modelBuilder.Entity("LokusAPI.Models.Payment", b =>
                {
                    b.HasOne("LokusAPI.Models.Booking", "Booking")
                        .WithMany()
                        .HasForeignKey("ReservaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("LokusAPI.Models.Space", b =>
                {
                    b.HasOne("LokusAPI.Models.Stablishment", "Stablishment")
                        .WithMany("Spaces")
                        .HasForeignKey("StablishmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stablishment");
                });

            modelBuilder.Entity("LokusAPI.Models.Stablishment", b =>
                {
                    b.HasOne("LokusAPI.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("LokusAPI.Models.Company", "Company")
                        .WithMany("Stablishments")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LokusAPI.Models.Image", "ProfileImage")
                        .WithMany()
                        .HasForeignKey("ProfileImageId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Address");

                    b.Navigation("Company");

                    b.Navigation("ProfileImage");
                });

            modelBuilder.Entity("LokusAPI.Models.StablishmentGallery", b =>
                {
                    b.HasOne("LokusAPI.Models.Stablishment", "Stablishment")
                        .WithMany("Galleries")
                        .HasForeignKey("StablishmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stablishment");
                });

            modelBuilder.Entity("LokusAPI.Models.Company", b =>
                {
                    b.Navigation("Stablishments");
                });

            modelBuilder.Entity("LokusAPI.Models.Customer", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Feedbacks");

                    b.Navigation("Images");
                });

            modelBuilder.Entity("LokusAPI.Models.Space", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("LokusAPI.Models.Stablishment", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Feedbacks");

                    b.Navigation("Galleries");

                    b.Navigation("Spaces");
                });

            modelBuilder.Entity("LokusAPI.Models.Subscription", b =>
                {
                    b.Navigation("Companies");

                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
